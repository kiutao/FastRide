import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion 'Google Inc.:Google APIs:22'
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.maximum.fastride"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 2
        versionName '1.1'
        multiDexEnabled = true
        //testPackageName "com.maximum.fastride.tests"
        //testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        ndk {
//            moduleName "libfastcvUtils"
//            abiFilters "armeabi"
//            ldLibs "EGL", "GLESv3", "dl", "log"
//        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    productFlavors {
//        jbFlavor {
//            minSdkVersion 16
//            versionName '1.0-jellyBean'
//            applicationId 'com.maximum.fastride.jbFlavor'
//        }
        lpFlavor {
            minSdkVersion 16
            versionName '1.1'
            applicationId 'com.maximum.fastride.lpFlavor'
            versionCode 2
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // Unit testing dependencies
    //   -----------   don't commit need to clear this comment before sending --------------     androidTestCompile 'junit:junit:4.12'
    compile files('libs/mobileservices-2.0.1-beta.jar')
    //compile 'com.microsoft.azure:azure-mobile-services-android-sdk:2.0.2+'
    compile files('libs/notifications-1.0.1.jar')
    compile 'com.google.code.gson:gson:2+'
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:cardview-v7:+'
    compile 'com.android.support:recyclerview-v7:+'
    compile 'com.microsoft.azure.android:azure-storage-android:0.3.0@aar'
    compile 'com.google.guava:guava:17.+'
    compile 'com.facebook.android:facebook-android-sdk:3.21.1'
    //compile 'com.facebook.android:facebook-android-sdk:4.0.0'
    // See here: https://developers.google.com/android/guides/setup
    // for detailed discussion about setting up GMS
    compile 'com.google.android.gms:play-services-location:7.5.0'
    compile 'com.google.android.gms:play-services-gcm:7.5.0'
    compile 'com.google.android.gms:play-services-plus:7.5.0'
    //compile 'com.google.android.gms:play-services:7.5.0'
    compile 'com.android.support:design:22.2.0'
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.afollestad:material-dialogs:0.7.5.2'
}

//task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
//    //def ndkDir = android.plugin.ndkFolder //'D:\\android-ndk-r10d'
//    //println( project.getPlugins().getPlugin('android').getProperties() )
//    def ndkDir = 'D:\\android-ndk-r10d'
//    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//        println "Using NDK from $ndkDir"
//        commandLine "$ndkDir\\ndk-build.cmd",
//                '-C', file('src/main/jni').absolutePath,
//                '-j', Runtime.runtime.availableProcessors()
//        // 'NDK_APPLICATION_MK', 'src/main/jni/Application.mk'
//        // 'all',
//        // '-d',
//        // 'NDK_DEBUG=1'
//    } else {
//        commandLine "$ndkDir\\ndk-build",
//                '-C', file('src/main/jni').absolutePath,
//                '-j', Runtime.runtime.availableProcessors(),
//                //'all',
//                '-d',
//                'NDK_DEBUG=1'
//    }
//}
//
//task cleanNative(type: Exec, description: 'Clean JNI object files') {
//    def ndkDir = 'D:\\android-ndk-r10d'
//    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//        commandLine "$ndkDir/ndk-build.cmd",
//                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
//                'clean'
//    } else {
//        commandLine "$ndkDir/ndk-build",
//                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
//                'clean'
//    }
//}
//
//clean.dependsOn 'cleanNative'

//tasks.withType(JavaCompile) {
//    compileTask -> compileTask.dependsOn buildNative
//}